%Mass univariate statistical anlysis for EmCon
%
%Author: Eric Fields
%Version Date: 8 March 2024

%% SET-UP

%Make sure all EEGLAB functions are on the MATLAB path
[ALLEEG, EEG, CURRENTSET, ALLCOM] = eeglab;
clearvars; close all;

%Paths
main_dir = 'C:\Users\fieldsec\OneDrive - Westminster College\Documents\ECF\Research\EmCon\DATA';
mua_dir = fullfile(main_dir, 'stats', 'erp', 'mass_uni');
cd(mua_dir);

%Load GND
load(fullfile(mua_dir, 'EmCon_128Hz.GND'), '-mat');

%Parameters
n_perm = 1e4;
thresh_p = 0.01;
chan_hood = 70;


%% VALENCE ANALYSIS

%Define some variables
time_windows = {[300, 1000], [0, 1100]};
chans        = {{'CP3', 'CPZ', 'CP4', 'P3', 'PZ', 'P4'}, {GND.chanlocs.labels}};

for i = 1:length(time_windows)
    
    time_wind = time_windows{i};

    %One-way ANOVA
    GND = FclustGND(GND, ...
                    'bins', 1:2, ...  
                    'factor_names', 'Valence', ...  
                    'factor_levels', 2, ...
                    'time_wind', time_wind, ...
                    'include_chans', chans{i}, ...
                    'chan_hood', chan_hood, ...
                    'n_perm', n_perm, ...
                    'thresh_p', thresh_p, ...
                    'plot_raster', 'no', ...
                    'save_GND', 'no', ...
                    'output_file', fullfile('results', sprintf('EmCon_Valence_%d-%d.xlsx', time_wind(1), time_wind(2))), ...
                    'verblevel', 2);
    %Show and save raster plots for significant effects
    save_sig_rasters(GND, length(GND.F_tests), 'results', sprintf('EmCon_Valence_%d-%d', time_wind(1), time_wind(2)))
                
end


%% ODDBALL ANALYSIS

%Define some variables
time_windows = {[300, 1000], [0, 1100]};
chans        = {{'CP3', 'CPZ', 'CP4', 'P3', 'PZ', 'P4'}, {GND.chanlocs.labels}};

for i = 1:length(time_windows)
    
    time_wind = time_windows{i};

    %One-way ANOVA
    GND = FclustGND(GND, ...
                    'bins', [1, 3], ...  
                    'factor_names', 'OdballEffect', ...  
                    'factor_levels', 2, ...
                    'time_wind', time_wind, ...
                    'include_chans', chans{i}, ...
                    'chan_hood', chan_hood, ...
                    'n_perm', n_perm, ...
                    'thresh_p', thresh_p, ...
                    'plot_raster', 'no', ...
                    'save_GND', 'no', ...
                    'output_file', fullfile('results', sprintf('EmCon_Oddball_%d-%d.xlsx', time_wind(1), time_wind(2))), ...
                    'verblevel', 2);
    %Show and save raster plots for significant effects
    save_sig_rasters(GND, length(GND.F_tests), 'results', sprintf('EmCon_Oddball_%d-%d', time_wind(1), time_wind(2)));

end


%% MEMORY X DELAY ANALYSIS (COLLAPSED ACROSS NEU & NEG)

%Define some variables
time_windows = {[300, 1000], [500, 1100], [0, 1100]};
chans        = {{'CP3', 'CPZ', 'CP4', 'P3', 'PZ', 'P4'}, ...
                {'FP2', 'FZ', 'F4', 'FCZ', 'FC4'}, ... 
                {GND.chanlocs.labels}};

for i = 1:length(time_windows)
    
    time_wind = time_windows{i};

    %Full factorial design
    GND = FclustGND(GND, ...
                    'bins', [20, 21, 36, 37], ...  
                    'factor_names', {'Dm', 'delay'}, ...  
                    'factor_levels', [2, 2], ...
                    'time_wind', time_wind, ...
                    'include_chans', chans{i}, ...
                    'chan_hood', chan_hood, ...
                    'n_perm', n_perm, ...
                    'thresh_p', thresh_p, ...
                    'plot_raster', 'no', ...
                    'save_GND', 'no', ...
                    'output_file', fullfile('results', sprintf('EmCon_MemXDelay_ValCollapsed_%d-%d.xlsx', time_wind(1), time_wind(2))), ...
                    'verblevel', 2);
    %Show and save raster plots for significant effects
    save_sig_rasters(GND, length(GND.F_tests), 'results', sprintf('EmCon_MemXDelay_ValCollapsed_%d-%d', time_wind(1), time_wind(2)));

    %Memory within Immediate
    GND = FclustGND(GND, ...
                    'bins', [20, 21], ...  
                    'factor_names', 'Dm', ...  
                    'factor_levels', 2, ...
                    'time_wind', time_wind, ...
                    'include_chans', chans{i}, ...
                    'chan_hood', chan_hood, ...
                    'n_perm', n_perm, ...
                    'thresh_p', thresh_p, ...
                    'plot_raster', 'no', ...
                    'save_GND', 'no', ...
                    'output_file', fullfile('results', sprintf('EmCon_Mem_Immediate_ValCollapsed_%d-%d.xlsx', time_wind(1), time_wind(2))), ...
                    'verblevel', 2);
    %Show and save raster plots for significant effects
    save_sig_rasters(GND, length(GND.F_tests), 'results', sprintf('EmCon_Mem_Immediate_ValCollapsed_%d-%d', time_wind(1), time_wind(2)));
    
    %Memory within Delayed
    GND = FclustGND(GND, ...
                    'bins', [36, 37], ...  
                    'factor_names', 'Dm', ...  
                    'factor_levels', 2, ...
                    'time_wind', time_wind, ...
                    'include_chans', chans{i}, ...
                    'chan_hood', chan_hood, ...
                    'n_perm', n_perm, ...
                    'thresh_p', thresh_p, ...
                    'plot_raster', 'no', ...
                    'save_GND', 'no', ...
                    'output_file', fullfile('results', sprintf('EmCon_Mem_Delayed_ValCollapsed_%d-%d.xlsx', time_wind(1), time_wind(2))), ...
                    'verblevel', 2);
    %Show and save raster plots for significant effects
    save_sig_rasters(GND, length(GND.F_tests), 'results', sprintf('EmCon_Mem_Delayed_ValCollapsed_%d-%d', time_wind(1), time_wind(2)));
                
end


%% VALENCE X MEMORY X DELAY ANALYSIS

%Define some variables
time_windows = {[300, 1000], [500, 1100], [0, 1100]};
chans        = {{'CP3', 'CPZ', 'CP4', 'P3', 'PZ', 'P4'}, ...
                {'FP2', 'FZ', 'F4', 'FCZ', 'FC4'}, ... 
                {GND.chanlocs.labels}};

for i = 1:length(time_windows)
    
    time_wind = time_windows{i};

    %Full factorial design
    GND = FclustGND(GND, ...
                    'bins', [8, 9, 12, 13, 24, 25, 28, 29], ...  
                    'factor_names', {'Dm', 'Valence', 'Delay'}, ...  
                    'factor_levels', [2, 2, 2], ...
                    'time_wind', time_wind, ...
                    'include_chans', chans{i}, ...
                    'chan_hood', chan_hood, ...
                    'n_perm', n_perm, ...
                    'thresh_p', thresh_p, ...
                    'plot_raster', 'no', ...
                    'save_GND', 'no', ...
                    'output_file', fullfile('results', sprintf('EmCon_ValXMemXDelay_%d-%d.xlsx', time_wind(1), time_wind(2))), ...
                    'verblevel', 2);
    %Show and save raster plots for significant effects
    save_sig_rasters(GND, length(GND.F_tests), 'results', sprintf('EmCon_ValXMemXDelay_%d-%d', time_wind(1), time_wind(2)));
                
end


%% SAVE GND

%Save GND with resutls
GND = save_matmk(GND, 'SRME2_128Hz_wResults.GND', GND.filepath, 1);

